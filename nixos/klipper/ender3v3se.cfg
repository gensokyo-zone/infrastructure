[bltouch]
control_pin:PC13
pin_move_time:0.400000
probe_with_touch_mode:true
sensor_pin:^PC14
speed:10
lift_speed:40
samples:2
stow_on_each_sample:false

# stock values from an example config
x_offset:-23.000000
y_offset:-14.500000

# arc X/Y PROBE attempt #1 (unlikely to be perfect...)
#x_offset:-24.8
#y_offset:-16

[dirzctl]

[e3v3se_display]
language:english
logging:true

[output_pin beeper]
pin:PB0

[extruder]
dir_pin:PB3
enable_pin:!PC3
filament_diameter:1.750000
heater_pin:PA1
max_extrude_only_distance:100.000000
max_temp:260
microsteps:16
min_temp:0
nozzle_diameter:0.400000
rotation_distance:7.440000
sensor_pin:PC5
sensor_type:EPCOS 100K B57560G104F
step_pin:PB4
# https://www.klipper3d.org/Pressure_Advance.html
#pressure_advance:0.0295
pressure_advance:0.0432
#pressure_advance:0.0444
pressure_advance_smooth_time:0.040

[firmware_retraction]
retract_length:1.2
unretract_extra_length:0
retract_speed:40
unretract_speed:30

[fan]
pin:PA0

[filament_switch_sensor filament_sensor]
switch_pin:!PC15

[filter]

[heater_bed]
heater_pin:PB2
max_temp:100
min_temp:0
sensor_pin:PC4
sensor_type:EPCOS 100K B57560G104F

[heater_fan hotend_fan]
pin:PC1

[hx711s]
sensor0_clk_pin:PA4
sensor0_sdo_pin:PC6

[mcu]
restart_method:command
#serial:/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
serial:/dev/ttyEnder3v3se

[printer]
kinematics:cartesian
max_accel:2500
max_velocity:250
max_z_accel:100
max_z_velocity:5
square_corner_velocity:5.000000

[prtouch]
clr_noz_len_y:15
clr_noz_start_x:15
clr_noz_start_y:25
s_bed_max_temp:60
s_hot_max_temp:200
s_hot_min_temp:160
sensor_x:32
sensor_y:30
show_msg:true
wipe_retract_distance:2

[safe_z_home]
home_xy_position:134,123
speed:50
z_hop:10
z_hop_speed:10

[screws_tilt_adjust]
horizontal_move_z:10.000000
screw1:54.5,45.5
screw1_name:front left screw
screw2:224.5,45.5
screw2_name:front right screw
screw3:224.5,215.5
screw3_name:rear right screw
screw4:54.5,215.5
screw4_name:rear left screw
screw_thread:CCW-M4
speed:50.000000

[stepper_x]
dir_pin:!PB9
enable_pin:!PC3
endstop_pin:~!PA5
homing_speed:80
microsteps:16
position_endstop:-6
position_max:230
position_min:-6
rotation_distance:40
step_pin:PC2

[stepper_y]
dir_pin:PB7
enable_pin:!PC3
endstop_pin:~!PA6
homing_speed:80
microsteps:16
position_endstop:-14
position_max:230
position_min:-14
rotation_distance:40
step_pin:PB8

[stepper_z]
dir_pin:!PB5
enable_pin:!PC3
endstop_pin:probe:z_virtual_endstop
homing_retract_dist:2.000000
homing_speed:4
microsteps:16
position_max:250
position_min:-3
rotation_distance:8
second_homing_speed:1
step_pin:PB6

[tmc2208 stepper_x]
interpolate:true
run_current:0.600000
sense_resistor:0.150000
uart_pin:PB12

[tmc2208 stepper_y]
interpolate:true
run_current:0.600000
sense_resistor:0.150000
uart_pin:PB13

[tmc2208 stepper_z]
interpolate:true
run_current:0.800000
sense_resistor:0.150000
uart_pin:PB14

[endstop_phase]

[input_shaper]
# https://www.klipper3d.org/Resonance_Compensation.html
#shaper_type: ei
# docs claim it's better for bedslingers...
shaper_type_y: ei
# print #1 measure try 1
#shaper_freq_x: 42.04730
#shaper_freq_y: 41.18993
# print #1 measure try 2
#shaper_freq_x: 39.02439
#shaper_freq_y: 40.00000
# print #5 feelings...
shaper_freq_x: 35.6
shaper_freq_y: 36.8

[gcode_arcs]
resolution:0.15

[bed_mesh]
algorithm:bicubic
horizontal_move_z:5
mesh_max:207,215.5
mesh_min:30,30
probe_count:7,7
speed:120

[bed_mesh fallback]
version = 1
points =
  -0.007500, 0.075000, 0.205000, 0.325000, 0.472500
  -0.177500, -0.050000, 0.090000, 0.205000, 0.327500
  -0.287500, -0.157500, -0.027500, 0.077500, 0.225000
  -0.375000, -0.237500, -0.105000, 0.015000, 0.142500
  -0.345000, -0.227500, -0.090000, 0.022500, 0.202500
x_count = 5
y_count = 5
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 30.0
max_x = 207.0
min_y = 30.0
max_y = 215.48000000000002

[gcode_macro _CLIENT_VARIABLE]
description: fluidd configuration
#variable_use_custom_pos:False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x:0.0 ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y:0.0 ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz:2.0 ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract:6.0 ; the value to retract while PAUSE
variable_cancel_retract:9.0 ; the value to retract while CANCEL_PRINT
variable_speed_retract:40.0
variable_unretract:6.0 ; the value to unretract while RESUME
variable_speed_unretract:30.0
variable_speed_hop:10.0
variable_speed_move:50.0
variable_park_at_cancel:True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x:None ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y:None ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_use_fw_retract:False ; disabled because retract amounts above are larger than the usual
variable_idle_timeout:600 ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor:"filament_sensor"
variable_user_pause_macro:"" ; will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro:"" ; will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro:"" ; will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:
